#!/usr/bin/env python3
import sys
import time
import json
import requests
import urllib3
from urllib3.exceptions import InsecureRequestWarning
urllib3.disable_warnings(InsecureRequestWarning)

IP = '10.45.140.160'
USER = 'admin'
PASSWORD = 'Nutanix.123'

# (1) Make Session
session = requests.Session()
session.auth = (USER, PASSWORD)
session.verify = False
session.headers.update({'Content-Type': 'application/json; charset=utf-8'})

# (2) Make URL
NTXPRISMCENTRAL = '10.45.140.160:9440'
NTXBASEURL3 = 'https://10.45.140.160:9440/api/nutanix/v3/idempotence_identifiers'
NTXBASEURL2 = 'https://{prismhost}/PrismGateway/services/rest/{version}/vms'.format(prismhost=NTXPRISMCENTRAL, version='v2.0')

def createSnapID(client_identifier, count=1):
	urlrun = 'https://{prismhost}/api/nutanix/{version}/idempotence_identifiers'.format(prismhost=NTXPRISMCENTRAL, version='v3')

	data = {
        "count": count,
        "client_identifier": client_identifier
	}
	snapID_response = session.post(urlrun, data=json.dumps(data))
	if snapID_response.ok:
		snapuuid = snapID_response.json()
            # return the unique element
		print(snapuuid.get('uuid_list', []))
	else:
		print("ERROR: SNAP ID could not be created")

def main():
	print("Usage:  ./createSnapID <client_identifier> <count>: \n")
	method_name = "createSnapID"
	parameter_name_1 = sys.argv[1]
	parameter_name_2 = int(sys.argv[2])
	createSnapID(parameter_name_1, parameter_name_2)

if __name__ == "__main__":
	main()